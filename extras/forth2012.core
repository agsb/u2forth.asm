
form https://forth-standard.org/standard/core

6 Glossary

6.1 Core words




   * 6.1.0010 !
    6.1.0030 #  Divide ud1 by the number in BASE giving the quotient ud2 and the remainder n. 
    6.1.0040 #> Make the pictured numeric output string available as a character string.
    6.1.0490 <#	Initialize the pictured numeric output conversion process.
	6.1.0050 #S	Convert one digit of ud1 according to the rule for #.
    6.1.0070 '
    6.1.0080 (
    6.1.0090 *
    6.1.0100 */
    6.1.0110 */MOD
    6.1.0120 +
    6.1.0130 +!
    6.1.0140 +LOOP
    6.1.0150 ,
    6.1.0160 -
    6.1.0180 .
    6.1.0190 ."
    6.1.0230 /
    6.1.0240 /MOD
    6.1.0250 0<
   * 6.1.0270 0=
    6.1.0290 1+
    6.1.0300 1-
    6.1.0310 2!
   * 6.1.0320 2*
   * 6.1.0330 2/
    6.1.0350 2@
    6.1.0370 2DROP
    6.1.0380 2DUP
    6.1.0400 2OVER
    6.1.0430 2SWAP
    6.1.0450 :
    6.1.0460 ;
   * 6.1.0480 <
   * 6.1.0530 =
   * 6.1.0540 >
    6.1.0550 >BODY
    6.1.0560 >IN
    6.1.0570 >NUMBER
   * 6.1.0580 >R
    6.1.0630 ?DUP
   * 6.1.0650 @
    6.1.0670 ABORT
    6.1.0680 ABORT"
    6.1.0690 ABS
    6.1.0695 ACCEPT
    6.1.0705 ALIGN
    6.1.0706 ALIGNED
    6.1.0710 ALLOT
   * 6.1.0720 AND
    6.1.0750 BASE
    6.1.0760 BEGIN
    6.1.0770 BL
   * 6.1.0850 C!
    6.1.0860 C,
   * 6.1.0870 C@
    6.1.0880 CELL+
    6.1.0890 CELLS
    6.1.0895 CHAR
    6.1.0897 CHAR+
    6.1.0898 CHARS
    6.1.0950 CONSTANT
    6.1.0980 COUNT
    6.1.0990 CR
    6.1.1000 CREATE
    6.1.1170 DECIMAL
    6.1.1200 DEPTH
    6.1.1240 DO
    6.1.1250 DOES>
   * 6.1.1260 DROP
   * 6.1.1290 DUP
    6.1.1310 ELSE
    6.1.1320 EMIT
    6.1.1345 ENVIRONMENT?
    6.1.1360 EVALUATE
   * 6.1.1370 EXECUTE
    6.1.1380 EXIT
    6.1.1540 FILL
    6.1.1550 FIND
    6.1.1561 FM/MOD
    6.1.1650 HERE
    6.1.1670 HOLD
    6.1.1680 I
    6.1.1700 IF
   * 6.1.1710 IMMEDIATE
    6.1.1720 INVERT
    6.1.1730 J
    6.1.1750 KEY
    6.1.1760 LEAVE
    6.1.1780 LITERAL
    6.1.1800 LOOP
    6.1.1805 LSHIFT
    6.1.1810 M*
    6.1.1870 MAX
    6.1.1880 MIN
    6.1.1890 MOD
    6.1.1900 MOVE
   * 6.1.1910 NEGATE
   * 6.1.1980 OR
   * 6.1.1990 OVER
    6.1.2033 POSTPONE
    6.1.2050 QUIT
   * 6.1.2060 R>
   * 6.1.2070 R@
    6.1.2120 RECURSE
    6.1.2140 REPEAT
   * 6.1.2160 ROT
    6.1.2162 RSHIFT
    6.1.2165 S"
    6.1.2170 S>D
    6.1.2210 SIGN
    6.1.2214 SM/REM
    6.1.2216 SOURCE
    6.1.2220 SPACE
    6.1.2230 SPACES
    6.1.2250 STATE
   * 6.1.2260 SWAP
    6.1.2270 THEN
    6.1.2310 TYPE
    6.1.2320 U.
    6.1.2340 U<
    6.1.2360 UM*
    6.1.2370 UM/MOD
    6.1.2380 UNLOOP
    6.1.2390 UNTIL
    6.1.2410 VARIABLE
    6.1.2430 WHILE
    6.1.2450 WORD
   * 6.1.2490 XOR
    6.1.2500 [
    6.1.2510 [']
    6.1.2520 [CHAR]
    6.1.2540 ]

6.2 Core extension words

    6.2.0200 .(
    6.2.0210 .R
    6.2.0260 0<>
    6.2.0280 0>
    6.2.0340 2>R
    6.2.0410 2R>
    6.2.0415 2R@
    6.2.0455 :NONAME
    6.2.0500 <>
    6.2.0620 ?DO
    6.2.0698 ACTION-OF
    6.2.0700 AGAIN
    6.2.0825 BUFFER:
    6.2.0855 C"
    6.2.0873 CASE
    6.2.0945 COMPILE,
    6.2.1173 DEFER
    6.2.1175 DEFER!
    6.2.1177 DEFER@
    6.2.1342 ENDCASE
    6.2.1343 ENDOF
    6.2.1350 ERASE
    6.2.1485 FALSE
    6.2.1660 HEX
    6.2.1675 HOLDS
    6.2.1725 IS
    6.2.1850 MARKER
    6.2.1930 NIP
    6.2.1950 OF
    6.2.2000 PAD
    6.2.2008 PARSE
    6.2.2020 PARSE-NAME
    6.2.2030 PICK
    6.2.2125 REFILL
    6.2.2148 RESTORE-INPUT
    6.2.2150 ROLL
    6.2.2266 S\"
    6.2.2182 SAVE-INPUT
    6.2.2218 SOURCE-ID
    6.2.2295 TO
    6.2.2298 TRUE
    6.2.2300 TUCK
    6.2.2330 U.R
    6.2.2350 U>
    6.2.2395 UNUSED
    6.2.2405 VALUE
    6.2.2440 WITHIN
    6.2.2530 [COMPILE]
    6.2.2535 \

